
[STPlaneTarget]
class = duneggd.fgt.STPlane.STPlaneBuilder
strawThickness = Q('0.0065cm') 
sTube_innerDia = Q('0.95cm')
sTube_outerDia = sTube_innerDia + 2*strawThickness
sTube_length   = Q('340cm')
sAnodeWire_Dia = Q('0.003cm')
nTubesPerPlane = 336
stPlaneMat     = 'Air'
strawMat       = 'Kapton'
stGas          = 'stGas_Ar'

[STPlaneRadiator]
class = duneggd.fgt.STPlane.STPlaneBuilder
strawThickness = {STPlaneTarget:strawThickness} 
sTube_innerDia = {STPlaneTarget:sTube_innerDia}
sTube_outerDia = {STPlaneTarget:sTube_outerDia}
sTube_length   = {STPlaneTarget:sTube_length}
sAnodeWire_Dia = {STPlaneTarget:sAnodeWire_Dia}
nTubesPerPlane = {STPlaneTarget:nTubesPerPlane}
stPlaneMat     = {STPlaneTarget:stPlaneMat}
strawMat       = {STPlaneTarget:strawMat}
stGas          = 'stGas_Xe'

[TargetPlaneArgon] # still think about volume names, reco will eventually want these target tubes
class = duneggd.fgt.Target.TargetPlaneBuilder
targetMat       = 'ArgonTarget'
tubeThickness   = Q('0.04in')
nTubesPerTarget = 63 # should be 68, but cant fit them all inside STT dimensions when they equal STPlane dimensions
tTube_length    = {STPlaneTarget:sTube_length}
tTube_innerDia  = Q('2.0in')
tTube_outerDia  = tTube_innerDia + 2*tubeThickness
empty           = False

[EmptyTargetPlaneArgon]
class = duneggd.fgt.Target.TargetPlaneBuilder
targetMat       = 'Air'
tubeThickness   = {TargetPlaneArgon:tubeThickness}
nTubesPerTarget = {TargetPlaneArgon:nTubesPerTarget}
tTube_length    = {TargetPlaneArgon:tTube_length}
tTube_innerDia  = {TargetPlaneArgon:tTube_innerDia}
tTube_outerDia  = {TargetPlaneArgon:tTube_outerDia}
empty           = True


[Radiator]
class = duneggd.fgt.Radiator.RadiatorBuilder
radFoilMat      = 'C3H6'
spacerMat       = 'Fabric'
foilThickness   = Q('25um')
spacerThickness = Q('125um')
radFoilDim = [ {STPlaneTarget:sTube_length}, {STPlaneTarget:sTube_length}, foilThickness]
spacerDim  = [ {STPlaneTarget:sTube_length}, {STPlaneTarget:sTube_length}, spacerThickness]
nFoilsPerRadiator = 60
onlyOneBlock = True 


[STT]
subbuilders = ['STPlaneTarget', 'STPlaneRadiator', 'TargetPlaneArgon', 'EmptyTargetPlaneArgon', 'Radiator']
class = duneggd.fgt.STT.STTBuilder
config = 'ArOptimized' # or 'cdr'
sttMat     = 'Air'
#sttDim defined at construction based off of STPlane parameters
xxyyMod_z      = Q('62mm')
   # In the modules without radiators, this is the z span of 
   # one module of two STPlanes (one horiz. and one vert.)
   # From figure from Jan Boissevain
radiatorMod_z  = Q('76mm')
   # There are 4 radiators and 2 st planes per mod, use this
   # parameter to calc the space between radiators.
   # See Fig. 2.2 in the DUNE-ND CDR annex.
stt_z          = Q('6.4m')
FeTar_z = Q('1mm')
CaTar_z = Q('7mm')
CTar_z  = ({Radiator:foilThickness}+{Radiator:spacerThickness})*{Radiator:nFoilsPerRadiator}
nRadiatorModules = 75


[SBPlane]
class              = duneggd.fgt.SBPlane.SBPlaneBuilder
nScintBarsPerPlane = 128 
scintBarDim        = [Q('2.5cm'), Q('3.2m'), Q('1cm')]
sbPlaneMat         = 'epoxy_resin'
scintbarMat        = 'Scintillator'


[ECALDownstream]
subbuilders   = ['SBPlane']
class         = duneggd.fgt.ECALMod.ECALModBuilder
ecalMat       = 'Lead'
scintMat      = 'Scintillator'
ecalThickness = Q('81cm')
leadThickness = Q('1.75mm')
nSBPlanes     = 60

[ECALUpstream]
subbuilders   = ['SBPlane']
class         = {ECALDownstream:class}
ecalMat       = {ECALDownstream:ecalMat}
scintMat      = {ECALDownstream:scintMat}
ecalThickness = Q('27.5cm')
leadThickness = Q('3.5mm')
nSBPlanes     = 16

[ECALBarrelMod]
subbuilders    = ['SBPlane']
class          = {ECALDownstream:class}
ecalMat        = {ECALDownstream:ecalMat}
scintMat       = {ECALDownstream:scintMat}
ecalThickness  = {ECALUpstream:ecalThickness}
leadThickness  = {ECALUpstream:leadThickness}
nSBPlanes      = {ECALUpstream:nSBPlanes}
altPlaneOrient = False

[BarrelECAL]
subbuilders      = ['ECALBarrelMod', 'STT'] # stt so the modules can be placed around stt dim
class            = duneggd.fgt.ECALBarrel.ECALBarrelBuilder
ecalMat          = 'Air'
scintMat         = {ECALDownstream:scintMat}
   # ends to lead = >8cm starts pushing the magnet too big
sTubeEndsToLead  = Q('8cm')

[RPCMod]
class = duneggd.fgt.RPCMod.RPCModBuilder
rpcModDim    =[Q('200cm'),Q('100cm'),Q('1.5cm')]
resiplateDim =[Q('196cm'),Q('96cm'),Q('0.3cm')]
stripxDim     =[Q('0.765cm'),Q('96cm'),Q('0.35cm')]
stripyDim     =[Q('196cm'),Q('0.75cm'),Q('0.35cm')]
gas_gap      =Q('0.2cm')
rpcModMat    ='Air'
resiplateMat ='Bakelite'
gasMat       ='stGas_Ar'
rpcReadoutMat='Honeycomb'


# There are 4 different Tray configurations
[RPCTray_End]
subbuilders = ['RPCMod']
class = duneggd.fgt.RPCTray.RPCTrayBuilder
rpcTrayDim =[Q('600cm'), Q('200cm'), Q('1.5cm')]
rpcTrayMat ='Air'
nrpcCol = 3
nrpcRow = 2

[RPCTray_BarBig]
subbuilders = ['RPCMod']
class = duneggd.fgt.RPCTray.RPCTrayBuilder
rpcTrayDim=[Q('400cm'), Q('310cm'), Q('4.0cm')]
rpcTrayMat={RPCTray_End:rpcTrayMat}
nrpcCol = 2
nrpcRow = 3

[RPCTray_BarMidS]
subbuilders = ['RPCMod']
class = duneggd.fgt.RPCTray.RPCTrayBuilder
rpcTrayDim=[Q('400cm'), Q('280cm'), Q('4.0cm')]
rpcTrayMat={RPCTray_End:rpcTrayMat}
nrpcCol = 2
nrpcRow = 3

[RPCTray_BarMidF]
subbuilders = ['RPCMod']
class = duneggd.fgt.RPCTray.RPCTrayBuilder
rpcTrayDim=[Q('400cm'), Q('250cm'), Q('4.0cm')]
rpcTrayMat={RPCTray_End:rpcTrayMat}
nrpcCol = 2
nrpcRow = 3

[RPCTray_BarSmall]
subbuilders = ['RPCMod']
class = duneggd.fgt.RPCTray.RPCTrayBuilder
rpcTrayDim =[Q('400cm'), Q('220cm'), Q('4.0cm')]
rpcTrayMat={RPCTray_End:rpcTrayMat}
nrpcCol = 2
nrpcRow = 3


[MuIDBarrel]
subbuilders = ['RPCTray_BarSmall','RPCTray_BarMidF','RPCTray_BarMidS','RPCTray_BarBig']
class = duneggd.fgt.MuIDBarrel.MuIDBarrelBuilder
# Temp numbers:
magThickness = Q('50cm')
magInDim   = [ Q('4.5m'),Q('4m'),Q('7.2m')] 
# According to design numbers, should be:
#magThickness = Q('60cm')
#magInDim   = [ Q('4.5m'),Q('3.8m'),Q('6.8m')] 
   # not the same as CDR inner dimensions
   # set so that inner dim of MuIDBarrel are 4.5 x 5 x 8
steelPlateThickness = Q('10cm')
gap_tworpctrays=Q('10cm')
air_gap=Q('5cm')
muidInDim = [magInDim[0], magInDim[1] + 2*magThickness, magInDim[2] + 2*magThickness] #outer dim of magnet


[MuIDUpstream]
subbuilders = ['RPCTray_End']
class = duneggd.fgt.MuIDEnd.MuIDEndBuilder
muidDim = [Q('600cm'), Q('600cm'), Q('64.5cm')]
steelPlateDim = [Q('600cm'), Q('600cm'), Q('20cm')]
nTraysPerPlane = 3
nPlanes = 3
muidMat = 'Steel'

[MuIDDownstream]
subbuilders = ['RPCTray_End']
class = duneggd.fgt.MuIDEnd.MuIDEndBuilder
muidDim = [Q('600cm'), Q('600cm'), Q('107.5cm')]
steelPlateDim = {MuIDUpstream:steelPlateDim}
nTraysPerPlane = {MuIDUpstream:nTraysPerPlane}
nPlanes = 5
muidMat = {MuIDUpstream:muidMat}


[Detector]
subbuilders = ['STT', 'MuIDBarrel', 'MuIDDownstream', 'MuIDUpstream', 'ECALDownstream', 'ECALUpstream', 'BarrelECAL']
class = duneggd.fgt.Detector.DetectorBuilder
vesselAroundSTT = False
vesselThickness = Q('0cm')
magInDim     = {MuIDBarrel:magInDim}
magThickness = {MuIDBarrel:magThickness}
upMuIDtoMagnet   = Q('1.15m')
downMuIDtoMagnet = Q('0.8m')
   # MuID steel to magnet coil space
   # from email with Jan Boissevain


[DetEnclosure]
subbuilders = ['Detector']
class = duneggd.fgt.DetEnc.DetEncBuilder
detEncDim = [Q('59ft'),Q('50.4ft'),Q('98.53125ft')] 
detEncMat = 'Air'
encBoundToDet_z = Q('25ft') # placeholder
   # -z bound of enclosure to -z face of detector
#detDim = [Q('6.7m'),Q('6.7m'),Q('13m')]


[World]
subbuilders = ['DetEnclosure']
class = duneggd.fgt.World.WorldBuilder
worldMat = 'Rock'
worldDim = [Q('200m'),Q('200m'),Q('200m')] # enough room for CRY, otherwise arbitrary
servBuildingDim = [Q('45ft'),Q('37.5ft'),Q('135.5ft')]
overburden = Q('155.94ft')
dirtDepth  = Q('50ft')
   # overburden-dirtDepth=rock height. this is a guess for now. 
primaryShaft_r   = Q('11ft')
shaftToEndBuilding = Q('79ft') 
   # the larger distance from shaft edge to service building in local z 
secondaryShaft_r = Q('8.5ft')
secondHallDim = [Q('30ft')+2*secondaryShaft_r,Q('11ft'),Q('19ft')]		
encBackWallToHall_z = Q('46.25ft') 
   # -z bound of enclosure to -z face of secondary hall



# ~^~^~^~^~^~ SOURCES ~^~^~^~^~^~

# Important to keep up with this!!!

# If not noted otherwise, the rest of the parameters 
# are from the CDR ND annex.

# World and DetEnclosure parameters from last 10 pages of 
# NDCF drawings, at LBNE DocDB 10831-v4.

